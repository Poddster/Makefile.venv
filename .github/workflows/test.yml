name: Run automated tests
on:
  push:
    paths-ignore:
      - '**.md'
      - '.git*'
  schedule:
    - cron: '17 7 9,19,29 * *'


jobs:
  test:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v1

      - name: Install OS packages for Python
        run: sudo apt-get update && sudo apt-get -y install python3-venv
        if: matrix.os == 'ubuntu-latest'

      - name: Specify Python command
        run: echo "PY=python" >> $GITHUB_ENV
        shell: bash
        if: matrix.os == 'windows-latest'

      - name: Workaround for slow macOS runners
        run: echo "TEST_SUBPROCESS_TIMEOUT=300" >> $GITHUB_ENV
        if: matrix.os == 'macos-latest'

      - name: Run automated tests
        run:  make -C tests test-verbose

  cygwin:
    name: windows-cygwin
    runs-on: windows-latest
    env:
      CYGWIN_ROOT: cygwin
      CYGWIN_PACKAGES: make,python3,git,bash,python-pip-wheel,python-setuptools-wheel,python-wheel-wheel
      CYGWIN_MIRROR: http://mirrors.kernel.org/sourceware/cygwin/
      LC_ALL: C.UTF-8
      LANG: C.UTF-8
    steps:
      - uses: actions/checkout@v1
      - name: Use absolute path for CYGWIN_ROOT
        run: echo "CYGWIN_ROOT=$GITHUB_WORKSPACE\\$CYGWIN_ROOT" >> $GITHUB_ENV
        shell: bash
      - name: Install Cygwin
        run: >
          md %CYGWIN_ROOT% &&
          choco install cygwin --params='"/InstallDir:%CYGWIN_ROOT%"' &&
          %CYGWIN_ROOT%\cygwinsetup.exe
          --quiet-mode
          --no-desktop
          --download
          --local-install
          --no-verify
          --site "%CYGWIN_MIRROR%"
          --local-package-dir "%CYGWIN_ROOT%"
          --root "%CYGWIN_ROOT%"
          --packages "%CYGWIN_PACKAGES%"
        shell: cmd
      - name: Run automated tests
        run: cygwin\bin\bash.exe -c "export PATH=/bin; make -C tests test-verbose"
      - name: Failure diagnostics
        run: |
         find cygwin -type f
         env
        shell: bash
        if: failure()
