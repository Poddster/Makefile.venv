name: Run automated tests
on:
  push:
    paths-ignore:
      - '**.md'
      - '.git*'


jobs:
  test:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v1

      - name: Install OS packages for Python
        run: sudo apt install python3-venv
        if: matrix.os == 'ubuntu-latest'

      - name: Specify Python command
        run: echo "::set-env name=PY::python"
        if: matrix.os == 'windows-latest'
        # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/development-tools-for-github-actions#set-an-environment-variable-set-env

      - name: Run automated tests
        run:  make -C tests test-verbose

  cygwin:
    name: windows-cygwin
    runs-on: windows-latest
    env:
      CYGWIN_ROOT: cygwin
      CYGWIN_PACKAGES: make,python3,git,bash
      CYGWIN_MIRROR: http://mirrors.kernel.org/sourceware/cygwin/
    steps:
      - uses: actions/checkout@v1
      - name: Use absolute path for CYGWIN_ROOT
        run: echo "::set-env name=CYGWIN_ROOT::${env:GITHUB_WORKSPACE}\${env:CYGWIN_ROOT}"
      - name: Cache Cygwin installation
        id: cygwin
        uses: actions/cache@v1
        with:
          path: cache
          key: cygwin-cache-v2  # Increment to rebuild Cygwin environment
      - name: Unpack Cygwin installation
        shell: bash
        run: |
          local SUCCESS
          local MAX_TRIES=5
          for i in $(seq $MAX_TRIES)
          do
            echo "Extraction attempt #$i"
            tar xJf cache/cygwin.tar.xz && SUCCESS=yes || continue
            [[ $SUCCESS == yes ]] && break
          done
          if [[ $i == $MAX_TRIES && $SUCCESS != yes ]]
          then
            echo "Failed to extract the archive"
            exit 99
          fi
          find . -type f
        if: steps.cygwin.outputs.cache-hit
      - name: Install Cygwin
        run: >
          md %CYGWIN_ROOT% &&
          choco install cygwin --params='"/InstallDir:%CYGWIN_ROOT%"' &&
          %CYGWIN_ROOT%\cygwinsetup.exe
          --quiet-mode
          --no-desktop
          --download
          --local-install
          --no-verify
          --site "%CYGWIN_MIRROR%"
          --local-package-dir "%CYGWIN_ROOT%"
          --root "%CYGWIN_ROOT%"
          --packages "%CYGWIN_PACKAGES%"
        shell: cmd
        if: steps.cygwin.outputs.cache-hit != true
      - name: Run automated tests
        run: /bin/make -C tests test-verbose
        env:
          PY: /bin/python3
        shell: cygwin\bin\bash.exe --noprofile --norc -eo pipefail {0}
      - name: Save Cygwin installation
        run: |
          mkdir cache || true
          tar cJf cache/cygwin.tar.xz cygwin
        shell: bash
