name: Run automated tests
on:
  push:
    paths-ignore:
      - '**.md'
      - '.git*'


jobs:
  test:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v1

      - name: Install OS packages for Python
        run: sudo apt install python3-venv
        if: matrix.os == 'ubuntu-latest'

      - name: Specify Python command
        run: echo "::set-env name=PY::python"
        if: matrix.os == 'windows-latest'
        # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/development-tools-for-github-actions#set-an-environment-variable-set-env

      - name: Run automated tests
        run:  make -C tests test-verbose

  cygwin:
    name: windows-cygwin
    runs-on: windows-latest
    env:
      CYGWIN_SETUP_URL: https://cygwin.com/setup-x86_64.exe
      CYGWIN_MIRROR: http://cygwin.mirrors.pair.com/
      CYGWIN_ROOT: cygwin
      CYGWIN_PACKAGES: make,python3,git,bash
    steps:
      - uses: actions/checkout@v1
      - name: Use absolute path for CYGWIN_ROOT
        run: echo "::set-env name=CYGWIN_ROOT::${env:GITHUB_WORKSPACE}\${env:CYGWIN_ROOT}"
      - name: Cache Cygwin installation
        id: cygwin
        uses: actions/cache@v1
        with:
          path: ${{ env.CYGWIN_ROOT }}
          key: cygwin-cache-v1-${{ env.CYGWIN_PACKAGES }}
          restore-keys: |
            cygwin-cache-v1-${{ env.CYGWIN_PACKAGES }}
            cygwin-cache-v1-
      - name: Install Cygwin
        run: |
          md %GITHUB_WORKSPACE%\%CYGWIN_ROOT%
          choco install cygwin --params='"/InstallDir:%GITHUB_WORKSPACE%\%CYGWIN_ROOT%"'
        shell: cmd
        if: not steps.cygwin.cache-hit
      - name: Install Cygwin packages
        run: |
          %CYGWIN_ROOT%\setup.exe --help
        shell: cmd
      - name: Run automated tests
        run:  make -C tests test-verbose
        shell: $CYGWIN_ROOT/bin/bash.exe --noprofile --norc -eo pipefail {0}
